{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PensamentoService {\n  constructor(http) {\n    this.http = http;\n    this.API = 'http://localhost:3000/pensamentos';\n  }\n  listar() {\n    return this.http.get(this.API);\n  }\n  criar(pensamento) {\n    return this.http.post(this.API, pensamento);\n  }\n  excluir(id) {\n    const url = `${this.API}/${id}`;\n    return this.http.delete(url);\n  }\n  buscarPorId(id) {\n    const url = `${this.API}/${id}`;\n    return this.http.get(url);\n  }\n  editar(pensamento) {\n    const url = `${this.API}/${pensamento.id}`;\n    return this.http.put(url, pensamento);\n  }\n}\nPensamentoService.ɵfac = function PensamentoService_Factory(t) {\n  return new (t || PensamentoService)(i0.ɵɵinject(i1.HttpClient));\n};\nPensamentoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PensamentoService,\n  factory: PensamentoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,iBAAiB;EAI5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFP,QAAG,GAAG,mCAAmC;EAElB;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAe,IAAI,CAACC,GAAG,CAAC;EAC9C;EAEAC,KAAK,CAACC,UAAqB;IACzB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAa,IAAI,CAACH,GAAG,EAAEE,UAAU,CAAC;EACzD;EAEAE,OAAO,CAACC,EAAU;IAChB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACN,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACU,MAAM,CAAaD,GAAG,CAAC;EAC1C;EAEAE,WAAW,CAACH,EAAU;IACpB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACN,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAaO,GAAG,CAAC;EACvC;EAEAG,MAAM,CAACP,UAAsB;IAC3B,MAAMI,GAAG,GAAG,GAAG,IAAI,CAACN,GAAG,IAAIE,UAAU,CAACG,EAAE,EAAE;IAC1C,OAAO,IAAI,CAACR,IAAI,CAACa,GAAG,CAAaJ,GAAG,EAAEJ,UAAU,CAAC;EACnD;;AA3BWP,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAgB,SAAjBhB,iBAAiB;EAAAiB,YAFhB;AAAM","names":["PensamentoService","constructor","http","listar","get","API","criar","pensamento","post","excluir","id","url","delete","buscarPorId","editar","put","factory","providedIn"],"sourceRoot":"","sources":["/home/anamuniz/Github/memoteca/src/app/componentes/pensamentos/pensamento.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Pensamento } from './pensamento';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PensamentoService {\n\n  private readonly API = 'http://localhost:3000/pensamentos'\n\n  constructor(private http: HttpClient) { }\n\n  listar(): Observable<Pensamento[]>{\n    return this.http.get<Pensamento[]>(this.API)\n  }\n\n  criar(pensamento:Pensamento): Observable<Pensamento>{\n    return this.http.post<Pensamento>(this.API, pensamento)\n  }\n\n  excluir(id: number): Observable<Pensamento>{\n    const url = `${this.API}/${id}`;\n    return this.http.delete<Pensamento>(url)\n  }\n\n  buscarPorId(id: number):Observable<Pensamento>{\n    const url = `${this.API}/${id}`\n    return this.http.get<Pensamento>(url)\n  }\n\n  editar(pensamento: Pensamento): Observable<Pensamento>{\n    const url = `${this.API}/${pensamento.id}`;\n    return this.http.put<Pensamento>(url, pensamento);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}